generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Model
model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String?
  role      Role      @default(USER)
  addresses Address[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([role])
}

enum Role {
  USER
  ADMIN
}

// Address Model
model Address {
  id      String @id @default(cuid())
  userId  String
  user    User   @relation(fields: [userId], references: [id])
  street  String
  city    String
  state   String
  zip     String
  country String
}

// Notification Model
// model Notification {
//   id        String @id @default(cuid())
//   userId    String
//   user      User @relation(fields: [userId], references: [id])
//   title     String
//   message   String
//   read      Boolean @default(false)
//   createdAt DateTime @default(now())
// }

// // Product Model
// model Product {
//   id          String @id @default(cuid())
//   name        String
//   description String
//   price       Float
//   stock       Int
//   sku         String @unique
//   categoryId  String
//   category    Category @relation(fields: [categoryId], references: [id])
//   images      String[]
//   reviews     Review[]
//   variants    ProductVariant[]
//   discounts   Discount[]
//   seoTitle    String?
//   seoDescription String?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt

//   Collection Collection[]

//   OrderItem OrderItem[]

//   Wishlist Wishlist[]

//   CartItem CartItem[]
// }
// model Category {
// id        String @id @default(cuid())
//   name      String
//   slug      String @unique
//   parentId  String?
//   parent    Category? @relation("CategoryHierarchy", fields: [parentId], references: [id])
//   children  Category[] @relation("CategoryHierarchy")
//   products  Product[]

// }

// // Product Variant Model
// model ProductVariant {
//   id          String @id @default(cuid())
//   productId   String
//   product     Product @relation(fields: [productId], references: [id])
//   variantType String
//   variantValue String
// }

// // Discount Model
// model Discount {
//   id          String @id @default(cuid())
//   productId   String
//   product     Product @relation(fields: [productId], references: [id])
//   discountType String
//   value       Float
//   active      Boolean @default(true)
// }

// // Collection Model
// model Collection {
//   id        String @id @default(cuid())
//   name      String
//   slug      String @unique
//   featured  Boolean @default(false)
//   products  Product[]
// }

// // Review Model
// model Review {
//   id        String @id @default(cuid())
//   rating    Int
//   comment   String?
//   userId    String
//   user      User @relation(fields: [userId], references: [id])
//   productId String
//   product   Product @relation(fields: [productId], references: [id])
//   images    String[]
//   responses ReviewResponse[]
//   createdAt DateTime @default(now())
// }

// // Review Response Model
// model ReviewResponse {
//   id        String @id @default(cuid())
//   reviewId  String
//   review    Review @relation(fields: [reviewId], references: [id])
//   responder String
//   message   String
// }

// // Order Model
// model Order {
//   id        String @id @default(cuid())
//   userId    String
//   user      User @relation(fields: [userId], references: [id])
//   status    OrderStatus @default(PENDING)
//   total     Float
//   items     OrderItem[]
//   createdAt DateTime @default(now())
// }

// enum OrderStatus {
//   PENDING
//   PROCESSING
//   SHIPPED
//   DELIVERED
//   CANCELED
// }

// // Order Item Model
// model OrderItem {
//   id        String @id @default(cuid())
//   orderId   String
//   order     Order @relation(fields: [orderId], references: [id])
//   productId String
//   product   Product @relation(fields: [productId], references: [id])
//   quantity  Int
//   price     Float
// }

// // Wishlist Model
// model Wishlist {
//   id        String @id @default(cuid())
//   userId    String
//   user      User @relation(fields: [userId], references: [id])
//   products  Product[]
// }

// // Coupon Model
// model Coupon {
//   id        String @id @default(cuid())
//   code      String @unique
//   discount  Float
//   expiry    DateTime?
//   usedBy    User[]
// }

// // Cart Model
// model Cart {
//   id        String @id @default(cuid())
//   userId    String
//   user      User @relation(fields: [userId], references: [id])
//   items     CartItem[]
// }

// // Cart Item Model
// model CartItem {
//   id        String @id @default(cuid())
//   cartId    String
//   cart      Cart @relation(fields: [cartId], references: [id])
//   productId String
//   product   Product @relation(fields: [productId], references: [id])
//   quantity  Int
// }
