generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  password       String
  profilePicture String?
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())

  role    Role      @default(USER)
  Address Address[]

  passwordResetToken passwordResetToken[]
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    Int
  street    String
  city      String
  state     String
  zipCode   String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model passwordResetToken {
  id        Int       @id @default(autoincrement())
  userId    Int
  token     String    @unique
  createdAt DateTime  @default(now())
  expiresAt DateTime
  usedAt    DateTime?
  user      User      @relation(fields: [userId], references: [id])
}

model HeaderAnnouncement {
  id   Int    @id @default(autoincrement())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String         @id @default(cuid())
  name        String
  price       Float
  stock       Int
  status      ProductStatus
  images      ProductImage[]
  categoryId  String
  category    Category       @relation(fields: [categoryId], references: [id])
  collections Collection[]   @relation("ProductCollections")
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model ProductImage {
  id        String   @id @default(cuid())
  url       String
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String
  imageUrl    String
  status      Status    @default(ACTIVE)
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Collection {
  id          String    @id @default(cuid())
  name        String
  description String
  imageUrl    String
  status      Status    @default(ACTIVE)
  products    Product[] @relation("ProductCollections")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Status {
  ACTIVE
  INACTIVE
}

enum ProductStatus {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
}

enum Role {
  USER
  ADMIN
}
