

# services:
#   backend:
#     build: ./backend
#     ports:
#       - "5000:5000"
#     env_file:
#       - backend/.env
#     depends_on:
#       - db
#     restart: always

#   frontend:
#     build: ./frontend
#     ports:
#       - "3000:3000"
#     depends_on:
#       - backend
#     restart: always

#   db:
#     image: postgres:15
#     restart: always
#     environment:
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_DB: mydatabase
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data:



# version: '3.8'

services:
  backend:
    build: ./backend
    container_name: teenz-backend
    ports:
      - "5000:5000"  # Backend exposed on port 5000 (internal)
    env_file:
      - backend/.env
    depends_on:
      - db
    restart: always
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: teenz-frontend
    ports:
      - "80:3000"  # Frontend exposed on port 80 (public HTTP)
    depends_on:
      - backend
    restart: always
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: teenz-db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"  # Exposed for backend access only
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
