version: "3.8"

services:
  backend:
    build: ./backend
    container_name: teenz-backend
    env_file:
      - backend/.env
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    build: ./frontend
    container_name: teenz-frontend
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    image: nginx:stable-alpine
    container_name: teenz-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    depends_on:
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: teenz-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: teenz-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:
  certbot-etc:
  certbot-var:

networks:
  app-network:





















# version: "3.8"

# services:
#   backend:
#     build: ./backend
#     container_name: teenz-backend
#     ports:
#       - "5000:5000" # Backend exposed on port 5000 (internal)
#     env_file:
#       - backend/.env
#     depends_on:
#       - db
#     restart: always
#     networks:
#       - app-network
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 5

#   frontend:
#     build: ./frontend
#     container_name: teenz-frontend
#     # ports:
#     #   - "80:3000" 
#     ports:
#       - "3000:3000" 
#     depends_on:
#       - backend
#     restart: always
#     networks:
#       - app-network
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:3000"]
#       interval: 30s
#       timeout: 10s
#       retries: 5

#   db:
#     image: postgres:15
#     container_name: teenz-db
#     restart: always
#     environment:
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_DB: mydatabase
#     ports:
#       - "5432:5432" # Exposed for backend access only
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - app-network

# volumes:
#   postgres_data:

# networks:
#   app-network:



