version: "3.8"

services:
  backend:
    build: ./backend
    container_name: teenz-backend
    env_file:
      - backend/.env
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    build: ./frontend
    container_name: teenz-frontend
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    image: nginx:stable-alpine
    container_name: teenz-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: teenz-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet --post-hook \"nginx -s reload\"; sleep 12h & wait $${!}; done'"
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: teenz-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:
  certbot-etc:
  certbot-webroot:

networks:
  app-network:
